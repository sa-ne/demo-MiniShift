#!/bin/bash

TextReset='\033[0m'
TextGreen='\033[32m'
TextBlue='\033[34m'
TextLightGrey='\033[37m'
TextBold='\033[1m'

FormatTextPause="$TextReset $TextLightGrey"  # Pause & continue
FormatTextCommands="$TextReset $TextGreen" # Commands to execute
FormatTextSyntax="$TextReset $TextBlue $TextBold" # Command Syntax & other text

# Place before command line to reset text format
FormatRunCommand="echo -e $TextReset"

# Reset text if script exits abnormally
trap 'echo -e $TextReset;exit' 1 2 3 15

clear
echo -e $FormatTextSyntax "
   Exercise: Exposing a Service as a Route
"
echo -e $FormatTextPause && read -p "<-- Press any key to continue -->" NULL
$FormatRunCommand
minishift start
echo -e $FormatTextPause && read -p "<-- Press any key to continue -->" NULL

echo -e $FormatTextSyntax "
   Log in to OpenShift as the developer user:
"
echo -e $FormatTextCommands "
	$ oc login -u developer -p developer
"
echo -e $FormatTextPause && read -p "<-- Press any key to continue -->" NULL
$FormatRunCommand
oc login -u developer -p developer
echo -e $FormatTextPause && read -p "<-- Press any key to continue -->" NULL

echo -e $FormatTextSyntax "
   Create a new project named route:
"
echo -e $FormatTextCommands "
	$ oc new-project route
"
echo -e $FormatTextPause && read -p "<-- Press any key to continue -->" NULL
$FormatRunCommand
oc new-project route
echo -e $FormatTextPause && read -p "<-- Press any key to continue -->" NULL

echo -e $FormatTextSyntax "
   Create a new PHP application using the course repository in GitHub.
   Use the oc new-app command to create the PHP application.
   Notice the symbol after php:7.0 is a tilde (~), not a dash nor a minus sign (-).
"
echo -e $FormatTextCommands "
	$ oc new-app --name=hello php:7.0~https://github.com/RedHatTraining/DO081x-lab-php-helloworld.git
"
echo -e $FormatTextPause && read -p "<-- Press any key to continue -->" NULL
$FormatRunCommand
oc new-app --name=hello php:7.0~https://github.com/RedHatTraining/DO081x-lab-php-helloworld.git
echo -e $FormatTextPause && read -p "<-- Press any key to continue -->" NULL

echo -e $FormatTextSyntax "
   Wait until the application pod is ready and running:
"
echo -e $FormatTextCommands "
	$ oc get pods -w
"
echo -e $FormatTextSyntax "
   The pod with a random suffix is the application pod. It might take some time
   until the build finishes and the application pod is ready and running.
"
echo -e $FormatTextPause && read -p "<-- Press any key to continue -->" NULL
$FormatRunCommand
gnome-terminal --command 'oc get pods -w' --tab
echo -e $FormatTextPause && read -p "<-- Press any key to continue -->" NULL

echo -e $FormatTextSyntax "
   Review the service for this application using oc describe:
"
echo -e $FormatTextCommands "
	$ oc describe svc hello
"
echo -e $FormatTextPause && read -p "<-- Press any key to continue -->" NULL
$FormatRunCommand
oc describe svc hello
echo -e $FormatTextSyntax "
   Remember a pod or a service IP address are accessible only from
   inside the OpenShift cluster.
"
echo -e $FormatTextPause && read -p "<-- Press any key to continue -->" NULL

echo -e $FormatTextSyntax "
   Expose the web application by creating a route resource.
   Expose the application service to create a route:
"
echo -e $FormatTextPause && read -p "<-- Press any key to continue -->" NULL
echo -e $FormatTextCommands "
	$ oc expose svc hello
"
$FormatRunCommand
oc expose svc hello
echo -e $FormatTextPause && read -p "<-- Press any key to continue -->" NULL

echo -e $FormatTextSyntax "
   Check the DNS name generated for the route by OpenShift:
"
echo -e $FormatTextCommands "
	$ oc get route
"
echo -e $FormatTextPause && read -p "<-- Press any key to continue -->" NULL
$FormatRunCommand
oc get route
echo -e $FormatTextSyntax "
   Minishift uses the VM IP address and the special nip.io DNS domain
   to create a valid DNS name that points to the Minishift VM.
   Notice the host name generated by OpenShift is comprised of the
  application name and project name, followed by a default domain
   configured for the OpenShift cluster.
"
echo -e $FormatTextPause && read -p "<-- Press any key to continue -->" NULL

echo -e $FormatTextSyntax "
   Check that the application can be accessed, from your workstation.
   Open a web browser and access the host name you got from the previous step.
"
$FormatRunCommand
ROUTE_URL=`oc get route | grep hello | cut -f6 -d' '`
echo -e $FormatTextPause && read -p "<-- Press any key to continue -->" NULL
$FormatRunCommand
firefox $ROUTE_URL &
echo -e $FormatTextPause && read -p "<-- Press any key to continue -->" NULL

echo -e $FormatTextSyntax "
   Open the Web UI and view details about project = route
"
$FormatRunCommand
minishift console
echo -e $FormatTextPause && read -p "<-- Press any key to continue -->" NULL

echo -e $FormatTextSyntax "
   Clean up the lab environment by deleting the project:
"
echo -e $FormatTextCommands "
	$ oc delete project route
"
echo -e $FormatTextPause && read -p "<-- Press any key to remove demo resources, or Ctrl+C to exit -->" NULL
$FormatRunCommand
oc delete project route
echo -e $FormatTextPause && read -p "<-- End of Demo 8: Press any key to continue -->" NULL && echo -e $TextReset
